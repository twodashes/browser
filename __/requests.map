{"version":3,"sources":["requests-1730b253.js","requests.js"],"names":["http_get","http_ajax","url","options","method","http_post","body","http_put","http_delete","fetch","console","log","JSON","stringify","params","mode","cache","credentials","redirect","referrer","headers","cors","res","json","data","output","requests","Object","freeze","__proto__","exports","defineProperty","value","require"],"mappings":"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","file":"requests.map","sourceRoot":"../cjs","sourcesContent":["'use strict';\n\n/**\n * GET request\n * @param {string} url - including protocol, not including query params\n * @param {object} options - override defaults:\n * @param {string|boolean} options.cache - see browser fetch documentation - additionally:\n *    true - use cached data - expires when the server is restarted\n *    false - do not cache - prevent fetch/http/browser/node from caching\n *    ```\n *    {mode:\"cors\", cache: \"no-cache\", redirect: \"follow\", referrer: \"no-referrer\", headers: {}}\n *    ```\n * @param {string} options.method - will be overridden to \"GET\"\n * @returns {Promise} - promise will resolve with response data\n */\nasync function http_get(url = ``, options = {}) {\n  options.method = \"GET\";\n  return http_ajax(url, options);\n}\n\n/**\n * POST request\n * @param {string} url\n * @param {*} data\n * @returns {Promise}\n */\nfunction http_post(url = ``, data = {}) {\n  return http_ajax(url, {method:\"POST\",body:data});\n}\n\n/**\n * PUT request\n * @param {string} url\n * @param {*} data\n * @returns {Promise}\n */\nfunction http_put(url = ``, data = {}) {\n  return http_ajax(url, {method:\"PUT\",body:data});\n}\n\n/**\n * DELETE request\n * @param {string} url\n * @param {*} data\n * @returns {Promise}\n */\nfunction http_delete(url = ``, data = {}) {\n  return http_ajax(url, {method:\"DELETE\",body:data});\n}\nasync function http_ajax(url = ``, options = {}) {\n  if (typeof fetch !== \"function\") {\n    console.log(\"fetch is not a function :(\");\n    return;\n  }\n  /*\n   * First try to get it from cache\n   */\n  // let method = options.method ? options.method.toUpperCase() : \"GET\";\n  // if (method === \"GET\" || options.cache === true) {\n  // }\n  /*\n   * fetch the url\n   */\n  if (method !== \"GET\") {\n    if (!options.body) {\n      options.body = \"\";\n    } else if (typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body); // body data type must match \"Content-Type\" header\n    }\n  }\n  let params = {\n    method: method,\n    mode: \"cors\",\n    cache: options.cache === false ? \"no-cache\" : typeof options.cache === \"string\" ? options.cache : \"default\",\n    credentials: \"same-origin\",\n    redirect: \"follow\",\n    referrer: \"no-referrer\",\n    headers: {},\n    ...options\n  };\n  let res = await fetch(url, {\n    method: params.method, // *GET, POST, PUT, DELETE, etc.\n    mode: params.cors, // no-cors, cors, *same-origin\n    cache: params.cache, // no-cache, reload, force-cache, only-if-cached\n    credentials: params.credentials, // include, *same-origin, omit\n    headers: params.headers, // {}, {\"Content-Type\": \"application/json; charset=utf-8\"}\n    redirect: params.redirect, // manual, *follow, error\n    referrer: params.referrer // no-referrer, *client\n  });\n  let data;\n  if (typeof res.json === \"function\") {\n    data = await res.json();\n  } else {\n    data = res;\n  }\n  let output = data.data || data;\n  /*\n   * Save to cache\n   */\n  // if (params.method === \"GET\" && output && options.cache === true) {\n  // }\n  return output;\n}\n\nvar requests = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  http_get: http_get,\n  http_post: http_post,\n  http_put: http_put,\n  http_delete: http_delete\n});\n\nexports.http_delete = http_delete;\nexports.http_get = http_get;\nexports.http_post = http_post;\nexports.http_put = http_put;\nexports.requests = requests;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar requests = require('./requests-1730b253.js');\n\n\n\nexports.http_delete = requests.http_delete;\nexports.http_get = requests.http_get;\nexports.http_post = requests.http_post;\nexports.http_put = requests.http_put;\n"]}